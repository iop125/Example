<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.my.mybatis.dao.ABycoustorResultMapMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <resultMap id="AaaaaaByResultMap1" type="AaaaaaByResultMap">
        <id column="id" property="id"/>
        <result column="aa" property="objcetFactory"/>
        <result column="aa" property="aa"/>
        <result column="flag" property="flag" typeHandler="com.my.mybatis.util.customTypeHandlerUtil"/>
    </resultMap>


    <select id="getA" parameterType="java.lang.String" resultMap="AaaaaaByResultMap1">
        select * from aaaaaa where aa=#{aa}
    </select>


    <insert timeout="5" id="insert" parameterType="AaaaaaByResultMap">
        INSERT INTO
        aaaaaa
        (id,aa,flag )
        VALUES (#{id}, #{aa},#{flag})
    </insert>
</mapper>